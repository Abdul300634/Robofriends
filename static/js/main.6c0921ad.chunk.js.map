{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","idx","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","borderTop","height","children","ErrorBoundry","state","haserror","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iPAeeA,EAbF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GACtB,OACE,sBAAKC,UAAU,oDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCmBHK,EAxBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAIf,OACE,8BAEMA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAKR,GAChBF,KAAMO,EAAOG,GAAKV,KAClBC,MAAOM,EAAOG,GAAKT,OAHdS,SCIVC,EAfG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACK,qBAAKT,UAAU,MAAf,SACG,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEPI,G,MATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,wBAAwBC,UAAU,iBAAiBC,OAAO,QAAjG,SACKL,EAAMM,aCuBJC,E,kDAxBX,WAAYP,GAAO,IAAD,8BACd,cAAMA,IACDQ,MAAM,CACTC,UAAS,GAHG,E,qDAQlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAGG,KAAKJ,MAAMC,SAEN,2DAIDG,KAAKZ,MAAMM,a,GApBCQ,aCuDZC,E,kDAhDX,aAAc,IAAD,8BACV,gBAMHC,eAAiB,SAACC,GAEd,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAPxC,EAAKZ,MAAQ,CACTlB,OAAS,GACT4B,YAAc,IAJT,E,qDAab,WAAoB,IAAD,OACfG,MAAM,8CAA8CC,MAAK,SAAAC,GACtD,OAAQA,EAASC,UACjBF,MAAK,SAAAG,GACJ,EAAKZ,SAAS,CAACvB,OAAOmC,S,oBAI9B,WAAS,IAAD,OACEC,EAAiBd,KAAKJ,MAAMlB,OAAOqC,QAAO,SAACrC,GAC7C,OAAOA,EAAOP,KAAK6C,cAAcC,SAAS,EAAKrB,MAAMU,YAAYU,kBAErE,OAA6B,GAA1BhB,KAAKJ,MAAMlB,OAAOwC,OACV,4CAIH,sBAAK5C,UAAU,KAAf,UACG,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACO,cAAC,EAAD,CAAU1B,OAAQoC,e,GApC9BK,IAAMjB,WCITkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMhDX,M","file":"static/js/main.6c0921ad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) =>{\r\n    return(\r\n      <div className='bg-light-green dib br3 pa3 ma2 grow bw-2 shadow-5'>\r\n          <img alt='Robots' src={`https://robohash.org/${id}?200x200`}/>\r\n          <div>\r\n              <h2>{name}</h2>\r\n              <p>{email}</p>\r\n          </div>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = ({robots}) =>{\r\n   \r\n  \r\n    \r\n    return(\r\n      <div>\r\n        {\r\n            robots.map((user,idx)=>{\r\n                return(\r\n                    <Card \r\n                    key={idx} \r\n                    id={robots[idx].id} \r\n                    name={robots[idx].name} \r\n                    email={robots[idx].email}/>\r\n                    \r\n                    );\r\n                    \r\n            })\r\n        }\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n    return(\r\n         <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search robots'\r\n            onChange={searchChange}\r\n            />\r\n         </div>\r\n        \r\n\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style={{overflowY:'scroll',border:'1px solid transparent',borderTop:'2px solid #fff',height:'80vh'}}>\r\n            {props.children}\r\n        </div>\r\n\r\n    ) ;\r\n}\r\n\r\nexport default Scroll;\r\n","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n          haserror:false\r\n        }\r\n\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({haserror:true});\r\n    }\r\n    render(){\r\n        if(this.state.haserror){\r\n            return(\r\n                <h1>Oooops. This is not good!</h1>\r\n            );\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n   \r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport Cardlist from '../components/Cardlist';\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n       super();\r\n        this.state = {\r\n            robots : [],\r\n            searchfield : ''\r\n        }  \r\n    }\r\n    onSearchChange = (event) => {\r\n\r\n        this.setState({searchfield:event.target.value});\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response=>{\r\n           return  response.json()\r\n        }).then(users=>{\r\n            this.setState({robots:users})\r\n        });\r\n        \r\n    }\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter((robots)=>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        if(this.state.robots.length==0){\r\n            return <h1>Loading...</h1>\r\n        }else{\r\n            return(\r\n\r\n                <div className='tc'>\r\n                   <h1 className='f1'>Robofriends</h1>\r\n                   <SearchBox searchChange={this.onSearchChange}/>\r\n                   <Scroll>\r\n                       <ErrorBoundry>\r\n                              <Cardlist robots={filteredRobots}/>\r\n                       </ErrorBoundry>\r\n                   </Scroll>\r\n                   \r\n                </div>\r\n                \r\n            );\r\n\r\n        }\r\n       \r\n        };\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(<App/> ,document.getElementById('root'));\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}